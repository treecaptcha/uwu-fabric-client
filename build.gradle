plugins {
    id 'fabric-loom' version '0.12-SNAPSHOT'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '7.1.0'
}

version = project.mod_version
group = project.maven_group

repositories {
    maven { url = "https://repo.sk1er.club/repository/maven-public" }
    maven { url "https://maven.terraformersmc.com/" }
    maven { url "https://repo.essential.gg/repository/maven-public"}

}

configurations {
    shade
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // Gui
    modImplementation(include("gg.essential:universalcraft-${universal_craft_minecraft_version}-fabric:${universal_craft_version}"))
    modImplementation(include("gg.essential:vigilance-${project.vigilance_minecraft_version}-fabric:${project.vigilance_version}"))

    shade "gg.essential:vigilance-${project.vigilance_minecraft_version}-fabric:${project.vigilance_version}"
    shade "gg.essential:universalcraft-${universal_craft_minecraft_version}-fabric:${universal_craft_version}"
    modImplementation("com.terraformersmc:modmenu:${rootProject.modmenu_version}")
}

shadowJar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    configurations = [project.configurations.getByName("shade")]
    classifier "dev-shadow"
    //relocate 'gg.essential.vigilance', 'io.github.ran.uwu.vigilance'
    relocate 'net.fabricmc', 'cancelled.on.twitter.fabricmc'
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    classifier null
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
    classifier "dev"
}
